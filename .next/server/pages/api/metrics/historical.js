"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/metrics/historical";
exports.ids = ["pages/api/metrics/historical"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmetrics%2Fhistorical&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fmetrics%2Fhistorical.ts&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmetrics%2Fhistorical&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fmetrics%2Fhistorical.ts&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_metrics_historical_ts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/pages/api/metrics/historical.ts */ \"(api-node)/./src/pages/api/metrics/historical.ts\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_src_pages_api_metrics_historical_ts__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_src_pages_api_metrics_historical_ts__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/metrics/historical\",\n        pathname: \"/api/metrics/historical\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _src_pages_api_metrics_historical_ts__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    projectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/metrics/historical\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: undefined,\n                multiZoneDraftMode: Boolean(\"false\"),\n                trustHostHeader: undefined,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/metrics/historical\",\n                projectDir:  false || '',\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmetrics%2Fhistorical&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fmetrics%2Fhistorical.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./src/lib/data/real-data-service.ts":
/*!*******************************************!*\
  !*** ./src/lib/data/real-data-service.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   realDataService: () => (/* binding */ realDataService)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\nclass FileBasedRealDataService {\n    async getLatestMetrics() {\n        try {\n            const files = await this.getDataFiles();\n            const metrics = [];\n            for (const file of files){\n                const data = await this.readDataFile(file);\n                if (data.length > 0) {\n                    const latest = data[0] // Most recent data point\n                    ;\n                    const metricKey = this.getMetricKey(latest.data_source, latest.metric_name);\n                    // Calculate change from previous data point if available\n                    let change = 0;\n                    let changePercent = 0;\n                    if (data.length > 1) {\n                        const previous = data[1];\n                        change = latest.data.value - previous.data.value;\n                        changePercent = previous.data.value !== 0 ? change / previous.data.value * 100 : 0;\n                    }\n                    // Determine status based on thresholds\n                    const status = this.getStatus(latest.data.value, metricKey);\n                    const metric = {\n                        key: metricKey,\n                        name: this.formatMetricName(latest.data_source, latest.metric_name),\n                        value: latest.data.value,\n                        unit: this.getUnit(metricKey),\n                        change,\n                        changePercent,\n                        status,\n                        lastUpdated: latest.timestamp,\n                        source: latest.data_source,\n                        confidence: latest.data.confidence,\n                        metadata: latest.data.metadata\n                    };\n                    metrics.push(metric);\n                }\n            }\n            return metrics;\n        } catch (error) {\n            console.error('Error reading real data:', error);\n            return [];\n        }\n    }\n    async getHistoricalData(metricKey, days) {\n        try {\n            const files = await this.getDataFiles();\n            const cutoffDate = new Date();\n            cutoffDate.setDate(cutoffDate.getDate() - days);\n            for (const file of files){\n                const data = await this.readDataFile(file);\n                if (data.length > 0) {\n                    const fileMetricKey = this.getMetricKey(data[0].data_source, data[0].metric_name);\n                    if (fileMetricKey === metricKey) {\n                        return data.filter((point)=>new Date(point.timestamp) >= cutoffDate).map((point)=>({\n                                timestamp: point.timestamp,\n                                value: point.data.value,\n                                metadata: point.data.metadata\n                            })).sort((a, b)=>new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n                    }\n                }\n            }\n            return [];\n        } catch (error) {\n            console.error('Error reading historical data:', error);\n            return [];\n        }\n    }\n    async getDataSources() {\n        try {\n            const files = await this.getDataFiles();\n            const sources = new Set();\n            for (const file of files){\n                const data = await this.readDataFile(file);\n                if (data.length > 0) {\n                    sources.add(data[0].data_source);\n                }\n            }\n            return Array.from(sources);\n        } catch (error) {\n            console.error('Error reading data sources:', error);\n            return [];\n        }\n    }\n    async getDataFiles() {\n        try {\n            const files = await fs__WEBPACK_IMPORTED_MODULE_0___default().promises.readdir(this.dataDir);\n            return files.filter((file)=>file.endsWith('.json')).filter((file)=>!file.includes('dashboard_alerts')) // Skip alert history files\n            .filter((file)=>!file.includes('test_')) // Skip test files\n            .filter((file)=>!file.includes('health_check_')) // Skip health check test files\n            .filter((file)=>!file.includes('comprehensive_test_')) // Skip comprehensive test files\n            .map((file)=>path__WEBPACK_IMPORTED_MODULE_1___default().join(this.dataDir, file));\n        } catch (error) {\n            console.error('Error reading data directory:', error);\n            return [];\n        }\n    }\n    async readDataFile(filePath) {\n        try {\n            const content = await fs__WEBPACK_IMPORTED_MODULE_0___default().promises.readFile(filePath, 'utf-8');\n            return JSON.parse(content);\n        } catch (error) {\n            console.error(`Error reading file ${filePath}:`, error);\n            return [];\n        }\n    }\n    getMetricKey(dataSource, metricName) {\n        // Map scraper data sources to dashboard metric keys\n        const mapping = {\n            'bond_issuance': 'bond_issuance',\n            'bdc_discount': 'bdc_discount',\n            'credit_fund': 'credit_fund',\n            'bank_provision': 'bank_provision'\n        };\n        // Handle specific metric name mappings for legitimate scrapers\n        if (dataSource === 'bond_issuance' && metricName === 'weekly') {\n            return 'bond_issuance';\n        }\n        if (dataSource === 'bdc_discount' && metricName === 'discount_to_nav') {\n            return 'bdc_discount';\n        }\n        return mapping[dataSource] || `${dataSource}_${metricName}`;\n    }\n    formatMetricName(dataSource, metricName) {\n        const nameMapping = {\n            'bond_issuance': 'Bond Issuance',\n            'bdc_discount': 'BDC Discount',\n            'credit_fund': 'Credit Fund Assets',\n            'bank_provision': 'Bank Provisions'\n        };\n        return nameMapping[dataSource] || `${dataSource} ${metricName}`.replace(/_/g, ' ').replace(/\\b\\w/g, (l)=>l.toUpperCase());\n    }\n    getUnit(metricKey) {\n        const unitMapping = {\n            'bond_issuance': 'currency',\n            'bdc_discount': 'percent',\n            'credit_fund': 'currency',\n            'bank_provision': 'percent'\n        };\n        return unitMapping[metricKey] || 'unit';\n    }\n    getStatus(value, metricKey) {\n        const thresholds = {\n            'bond_issuance': {\n                warning: 4000000000,\n                critical: 5000000000\n            },\n            'bdc_discount': {\n                warning: 8,\n                critical: 10\n            },\n            'credit_fund': {\n                warning: 80000000000,\n                critical: 100000000000\n            },\n            'bank_provision': {\n                warning: 12,\n                critical: 15\n            } // 12%, 15%\n        };\n        const threshold = thresholds[metricKey];\n        if (!threshold) return 'healthy';\n        if (value >= threshold.critical) return 'critical';\n        if (value >= threshold.warning) return 'warning';\n        return 'healthy';\n    }\n    constructor(){\n        this.dataDir = '/Users/turphai/Projects/kiro_aiCrash/data';\n    }\n}\n// Export singleton instance\nconst realDataService = new FileBasedRealDataService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./src/lib/data/real-data-service.ts\n");

/***/ }),

/***/ "(api-node)/./src/pages/api/metrics/historical.ts":
/*!*********************************************!*\
  !*** ./src/pages/api/metrics/historical.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_data_real_data_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/data/real-data-service */ \"(api-node)/./src/lib/data/real-data-service.ts\");\n\nasync function handler(req, res) {\n    if (req.method !== 'GET') {\n        return res.status(405).json({\n            message: 'Method not allowed'\n        });\n    }\n    const days = parseInt(req.query.days) || 30;\n    const cutoffDate = new Date();\n    cutoffDate.setDate(cutoffDate.getDate() - days);\n    try {\n        // Get real historical data\n        const realHistoricalData = await getRealHistoricalData(days);\n        res.status(200).json({\n            success: true,\n            data: realHistoricalData,\n            period: `${days} days`,\n            timestamp: new Date().toISOString()\n        });\n    } catch (error) {\n        console.error('Error fetching historical data:', error);\n        res.status(500).json({\n            success: false,\n            error: 'Failed to fetch historical data',\n            period: `${days} days`,\n            timestamp: new Date().toISOString()\n        });\n    }\n}\nasync function getRealHistoricalData(days) {\n    try {\n        const metricKeys = [\n            'bond_issuance',\n            'bdc_discount',\n            'credit_fund',\n            'bank_provision'\n        ];\n        const historicalData = {};\n        for (const metricKey of metricKeys){\n            const data = await _lib_data_real_data_service__WEBPACK_IMPORTED_MODULE_0__.realDataService.getHistoricalData(metricKey, days);\n            if (data.length > 0) {\n                historicalData[metricKey] = data;\n            }\n        }\n        return historicalData;\n    } catch (error) {\n        console.error('Error getting real historical data:', error);\n        return {};\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3NyYy9wYWdlcy9hcGkvbWV0cmljcy9oaXN0b3JpY2FsLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQytEO0FBRWhELGVBQWVDLFFBQVFDLEdBQW1CLEVBQUVDLEdBQW9CO0lBQzdFLElBQUlELElBQUlFLE1BQU0sS0FBSyxPQUFPO1FBQ3hCLE9BQU9ELElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFBRUMsU0FBUztRQUFxQjtJQUM5RDtJQUVBLE1BQU1DLE9BQU9DLFNBQVNQLElBQUlRLEtBQUssQ0FBQ0YsSUFBSSxLQUFlO0lBQ25ELE1BQU1HLGFBQWEsSUFBSUM7SUFDdkJELFdBQVdFLE9BQU8sQ0FBQ0YsV0FBV0csT0FBTyxLQUFLTjtJQUUxQyxJQUFJO1FBQ0YsMkJBQTJCO1FBQzNCLE1BQU1PLHFCQUFxQixNQUFNQyxzQkFBc0JSO1FBRXZETCxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQ25CVyxTQUFTO1lBQ1RDLE1BQU1IO1lBQ05JLFFBQVEsR0FBR1gsS0FBSyxLQUFLLENBQUM7WUFDdEJZLFdBQVcsSUFBSVIsT0FBT1MsV0FBVztRQUNuQztJQUNGLEVBQUUsT0FBT0MsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsbUNBQW1DQTtRQUVqRG5CLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFDbkJXLFNBQVM7WUFDVEssT0FBTztZQUNQSCxRQUFRLEdBQUdYLEtBQUssS0FBSyxDQUFDO1lBQ3RCWSxXQUFXLElBQUlSLE9BQU9TLFdBQVc7UUFDbkM7SUFDRjtBQUNGO0FBRUEsZUFBZUwsc0JBQXNCUixJQUFZO0lBQy9DLElBQUk7UUFDRixNQUFNZ0IsYUFBYTtZQUFDO1lBQWlCO1lBQWdCO1lBQWU7U0FBaUI7UUFDckYsTUFBTUMsaUJBQXdDLENBQUM7UUFFL0MsS0FBSyxNQUFNQyxhQUFhRixXQUFZO1lBQ2xDLE1BQU1OLE9BQU8sTUFBTWxCLHdFQUFlQSxDQUFDMkIsaUJBQWlCLENBQUNELFdBQVdsQjtZQUNoRSxJQUFJVSxLQUFLVSxNQUFNLEdBQUcsR0FBRztnQkFDbkJILGNBQWMsQ0FBQ0MsVUFBVSxHQUFHUjtZQUM5QjtRQUNGO1FBRUEsT0FBT087SUFDVCxFQUFFLE9BQU9ILE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLHVDQUF1Q0E7UUFDckQsT0FBTyxDQUFDO0lBQ1Y7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL3R1cnBoYWkvUHJvamVjdHMva2lyb19haUNyYXNoL3NyYy9wYWdlcy9hcGkvbWV0cmljcy9oaXN0b3JpY2FsLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRBcGlSZXF1ZXN0LCBOZXh0QXBpUmVzcG9uc2UgfSBmcm9tICduZXh0JztcbmltcG9ydCB7IHJlYWxEYXRhU2VydmljZSB9IGZyb20gJ0AvbGliL2RhdGEvcmVhbC1kYXRhLXNlcnZpY2UnO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcTogTmV4dEFwaVJlcXVlc3QsIHJlczogTmV4dEFwaVJlc3BvbnNlKSB7XG4gIGlmIChyZXEubWV0aG9kICE9PSAnR0VUJykge1xuICAgIHJldHVybiByZXMuc3RhdHVzKDQwNSkuanNvbih7IG1lc3NhZ2U6ICdNZXRob2Qgbm90IGFsbG93ZWQnIH0pO1xuICB9XG5cbiAgY29uc3QgZGF5cyA9IHBhcnNlSW50KHJlcS5xdWVyeS5kYXlzIGFzIHN0cmluZykgfHwgMzA7XG4gIGNvbnN0IGN1dG9mZkRhdGUgPSBuZXcgRGF0ZSgpO1xuICBjdXRvZmZEYXRlLnNldERhdGUoY3V0b2ZmRGF0ZS5nZXREYXRlKCkgLSBkYXlzKTtcblxuICB0cnkge1xuICAgIC8vIEdldCByZWFsIGhpc3RvcmljYWwgZGF0YVxuICAgIGNvbnN0IHJlYWxIaXN0b3JpY2FsRGF0YSA9IGF3YWl0IGdldFJlYWxIaXN0b3JpY2FsRGF0YShkYXlzKTtcbiAgICBcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgZGF0YTogcmVhbEhpc3RvcmljYWxEYXRhLFxuICAgICAgcGVyaW9kOiBgJHtkYXlzfSBkYXlzYCxcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgaGlzdG9yaWNhbCBkYXRhOicsIGVycm9yKTtcbiAgICBcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgIGVycm9yOiAnRmFpbGVkIHRvIGZldGNoIGhpc3RvcmljYWwgZGF0YScsXG4gICAgICBwZXJpb2Q6IGAke2RheXN9IGRheXNgLFxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICB9KTtcbiAgfVxufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRSZWFsSGlzdG9yaWNhbERhdGEoZGF5czogbnVtYmVyKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgbWV0cmljS2V5cyA9IFsnYm9uZF9pc3N1YW5jZScsICdiZGNfZGlzY291bnQnLCAnY3JlZGl0X2Z1bmQnLCAnYmFua19wcm92aXNpb24nXTtcbiAgICBjb25zdCBoaXN0b3JpY2FsRGF0YTogUmVjb3JkPHN0cmluZywgYW55W10+ID0ge307XG5cbiAgICBmb3IgKGNvbnN0IG1ldHJpY0tleSBvZiBtZXRyaWNLZXlzKSB7XG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVhbERhdGFTZXJ2aWNlLmdldEhpc3RvcmljYWxEYXRhKG1ldHJpY0tleSwgZGF5cyk7XG4gICAgICBpZiAoZGF0YS5sZW5ndGggPiAwKSB7XG4gICAgICAgIGhpc3RvcmljYWxEYXRhW21ldHJpY0tleV0gPSBkYXRhO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBoaXN0b3JpY2FsRGF0YTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBnZXR0aW5nIHJlYWwgaGlzdG9yaWNhbCBkYXRhOicsIGVycm9yKTtcbiAgICByZXR1cm4ge307XG4gIH1cbn0iXSwibmFtZXMiOlsicmVhbERhdGFTZXJ2aWNlIiwiaGFuZGxlciIsInJlcSIsInJlcyIsIm1ldGhvZCIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwiZGF5cyIsInBhcnNlSW50IiwicXVlcnkiLCJjdXRvZmZEYXRlIiwiRGF0ZSIsInNldERhdGUiLCJnZXREYXRlIiwicmVhbEhpc3RvcmljYWxEYXRhIiwiZ2V0UmVhbEhpc3RvcmljYWxEYXRhIiwic3VjY2VzcyIsImRhdGEiLCJwZXJpb2QiLCJ0aW1lc3RhbXAiLCJ0b0lTT1N0cmluZyIsImVycm9yIiwiY29uc29sZSIsIm1ldHJpY0tleXMiLCJoaXN0b3JpY2FsRGF0YSIsIm1ldHJpY0tleSIsImdldEhpc3RvcmljYWxEYXRhIiwibGVuZ3RoIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./src/pages/api/metrics/historical.ts\n");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmetrics%2Fhistorical&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fmetrics%2Fhistorical.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();